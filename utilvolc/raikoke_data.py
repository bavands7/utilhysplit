import datetime
import os.path as path
import numpy as np
import numpy.ma as ma
from utilvolc import volcat
import matplotlib.pyplot as plt



class RaikokeVolcat:
    """
    for easy retrieval of data for Raikoke eruption 
    """
    def __init__(self):     
        # location of data
        self.directory="/pub/ECMWF/JPSS/VOLCAT/Raikoke/Ash/"
        # naming of data
        self.basename = 'SCOPE_NWC_ASH-L2-ASH_PRODUCTS-HIMAWARI8_NOAA-RAIKOKE-'
        self.suffix =  '00-fv2.nc'
        self.strfmt = "%Y%m%d-%H%M"
        self.year = [2019]
        self.month = [6]
        # days available
        self.day = [22,23,24]
        # hours available
        self.hour = np.arange(0,24)
        # minutes available
        self.minute = np.arange(0,60,10)


    def scatter(self,dset,thresh=0.01):
        mass = volcat.get_mass(dset).isel(time=0)
        longitude = mass.longitude.values
        latitude = mass.latitude.values
        values = mass.values
        vpi = np.where(values>thresh)
        plt.scatter(longitude[vpi],latitude[vpi],c=values[vpi],s=values[vpi],marker='.')   
        return latitude, longitude, mass

    def scatter_ht(sel,dset,thresh=0.01):
        ht = volcat.get_height(dset).isel(time=0)
        mass = volcat.get_mass(dset).isel(time=0)
        longitude = ht.longitude.values
        latitude = ht.latitude.values
        values = mass.values
        vpi = np.where(values>thresh)
        plt.scatter(longitude[vpi],ht[vpi],c=values[vpi],s=values[vpi],marker='.')   



    def create_name(self, date):
        midname= date.strftime(self.strfmt)
        fname =self.basename + midname + self.suffix
        return path.join(self.directory, fname)

    def get_dset(self, date):
        """
        date : datetime object
        returns DataArray generated by volcat.open_dataset
        """
        fname = self.create_name(date)
        print('trying to open ', fname)
        dset = volcat.open_dataset(fname)
        return dset

    def combine_dsets(self, daylist=None, hlist=None, mlist=None):
        """
        combines data from different time periods into one xarray object.
        currently extracts only ash_mass.
        """
        iii=0
        for dset in self.generate_dsets(daylist,hlist,mlist):
            dra = volcat.get_mass(dset)
            if iii == 0:
               massra = dra
            if iii != 0:
               massra = xr.concat([massra, dra], dim='time')
            iii+=0
        return massra 


    def generate_dates(self, daylist=None, hlist=None, mlist=None):
        if not hlist: hlist = self.hour
        if not mlist: mlist = self.minute
        if not daylist: daylist = self.day
        for year in self.year:
            for month in self.month:
                for day in daylist:
                  for hr in hlist:
                    for mm in mlist:
                        date = datetime.datetime(year,month,day,hr,mm)
                        yield date

    def generate_dsets(self, daylist = None, hlist=None, mlist=None):
        for date in self.generate_dates(daylist,hlist,mlist):
            try:
              dset = self.get_dset(date)
            except:
              print('FILE cannot be opened ', self.create_name(date))
              continue
            yield dset
            
 
        #if not hlist: hlist = self.hour
        #if not mlist: mlist = self.minute
        #if not daylist: daylist = self.day
        #for year in self.year:
        #    for month in self.month:
        #        for day in daylist:
        #          for hr in hlist:
        #            for mm in mlist:
        #                date = datetime.datetime(year,month,day,hr,mm)
        #                try:
        #                  dset = self.get_dset(date)
        #                except:
        #                  print('FILE cannot be opened ', self.create_name(date))
        #                  continue
        #                yield dset


class ReventadorVolcat(RaikokeVolcat):
    """
    TO DO
    volcat.open_dataset does not work for these hdf files.
    need to use something else
    """

    def __init__(self):
        # location of data
        self.directory="/pub/ECMWF/JPSS/VOLCAT/Reventador/Ash/"
        self.basename = 'geocatL2.GOES-16.Full_Disk.'
        self.year = [2019]
        self.month = [2]
        self.day = [25]
        self.hour = np.arange(15,23)
        self.minute = np.arange(0,60,15)
        self.strfmt=("%Y%j.%H%M")
        self.suffix = "30.hdf" 

    def get_dset(self, date):
        """
        date : datetime object
        returns DataArray generated by volcat.open_dataset
        """
        fname = self.create_name(date)
        dset=volcat.open_dataset2(fname)
        return dset
